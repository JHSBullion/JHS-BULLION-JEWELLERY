// scripts/update_gold.js
// 作用：
// 1) 从 GoldAPI 拉 XAU/MYR，并换成 RM/克（纯金）
// 2) 生成 window.goldPrices：保留 90 天的“市场价”历史（按纯度折算）——供图表使用
// 3) 生成 window.storePrices：按“999 最新价 × 系数”计算的门店卖价（整数）
// 4) 生成 window.storeDiffs：门店卖价相对昨天的涨跌（整数）
//
// 你只需改 FACTORS 里的系数即可（相对于 999 的倍数）

const fs = require('fs');
const path = require('path');
const https = require('https');

const GOLDAPI_KEY = process.env.GOLDAPI_KEY;
if (!GOLDAPI_KEY) {
  console.error('Missing GOLDAPI_KEY env! Set it as a GitHub Actions secret.');
  process.exit(1);
}

const OZT_TO_G = 31.1034768;

// 用于生成 goldPrices（市场价历史）的纯度系数
const PURITY = { '999.9P':0.9999,'999.9':0.9999,'999':0.999,'916':0.916,'835':0.835 };

// ===== 你店里的“门店卖价”系数（相对于 999 的价格）=====
// 例：916 = 0.88 表示 “916 门店价 = 999 最新价 × 0.88”
// 想改逻辑只需改这里
const FACTORS = {
  "999.9P": 0.976,
  "999.9":  0.963,
  "999":    0.955,
  "916":    0.88,
  "835":    0.75
};
// =====================================================

const HISTORY_DAYS = 90; // goldPrices 保留的天数

function fetchGoldXauMyr() {
  const url = 'https://www.goldapi.io/api/XAU/MYR';
  const headers = { 'x-access-token': GOLDAPI_KEY, 'Accept': 'application/json' };
  return new Promise((resolve, reject) => {
    const req = https.request(url, { method:'GET', headers, timeout:15000 }, res => {
      let chunks = '';
      res.on('data', d => chunks += d);
      res.on('end', () => {
        try {
          const data = JSON.parse(chunks);
          if (!data || typeof data.price !== 'number') {
            return reject(new Error('GoldAPI invalid response: ' + chunks));
          }
          resolve(data.price); // MYR per oz
        } catch (e) { reject(e); }
      });
    });
    req.on('error', reject);
    req.on('timeout', () => { req.destroy(new Error('GoldAPI timeout')); });
    req.end();
  });
}

function readDataJs(filePath) {
  if (!fs.existsSync(filePath)) return { obj:null, raw:'' };
  const raw = fs.readFileSync(filePath, 'utf8');
  const m = raw.match(/window\.goldPrices\s*=\s*(\{[\s\S]*?\});/);
  if (!m) return { obj:null, raw };
  let obj = null;
  try { obj = (new Function(`return (${m[1]});`))(); } catch { obj = null; }
  return { obj, raw };
}

// 生成/更新 goldPrices（市场价历史）
function buildUpdatedMarket(existingObj, myrPerGramPure) {
  const today = new Date().toISOString().slice(0,10);
  const base = existingObj && typeof existingObj==='object' ? existingObj : {};
  const out = {};
  for (const k of Object.keys(PURITY)) {
    const marketPrice = Math.round(myrPerGramPure * PURITY[k]); // 市场价/克（四舍五入到整数）
    const hist = Array.isArray(base[k]?.history) ? [...base[k].history] : [];
    if (!hist.length || hist[hist.length-1].date !== today) {
      hist.push({ date: today, value: marketPrice });
    } else {
      hist[hist.length-1] = { date: today, value: marketPrice };
    }
    out[k] = { history: hist.slice(-HISTORY_DAYS) };
  }
  return out;
}

// 把对象转成 data.js 文本，并附加门店价
function toDataJsText(marketObj) {
  const pretty = JSON.stringify(marketObj, null, 2);

  // 页面用的显示标签 ↔ 内部 key 的映射
  const alias = {
    "999.9 BAR(P)": "999.9P",
    "999.9 BAR":    "999.9",
    "999 GOLD":     "999",
    "916 GOLD":     "916",
    "835 GOLD":     "835"
  };

  // 以 999 为基准：拿昨天和今天的 999 市场价
  const hist999 = (marketObj["999"] && Array.isArray(marketObj["999"].history)) ? marketObj["999"].history : [];
  const last999 = hist999.length ? hist999[hist999.length-1].value : null;
  const prev999 = hist999.length >= 2 ? hist999[hist999.length-2].value : null;

  // 计算门店卖价 & 涨跌（基于 999 × 系数）
  const store = {};       // 显示用：{ "916 GOLD": 403, ... }
  const storeDiffs = {};  // 与昨日比：{ "916 GOLD": +3, ... }

  for (const label in alias) {
    const key = alias[label];
    const factor = FACTORS[key] ?? 1.0;

    if (last999 == null) {
      store[label] = null;
      storeDiffs[label] = null;
    } else {
      const todayStore = Math.round(last999 * factor);
      store[label] = todayStore;

      if (prev999 == null) {
        storeDiffs[label] = null;
      } else {
        const ydayStore = Math.round(prev999 * factor);
        storeDiffs[label] = todayStore - ydayStore; // 正=涨，负=跌
      }
    }
  }

  const storePretty = JSON.stringify(store, null, 2);
  const storeDiffsPretty = JSON.stringify(storeDiffs, null, 2);

  return `// Auto-generated by GitHub Action. Unit: RM/gram
// window.goldPrices: 市场价历史；window.storePrices: 门店卖价（按 999×系数）；window.storeDiffs: 卖价涨跌
window.goldPrices = ${pretty};
window.storePrices = ${storePretty};
window.storeDiffs = ${storeDiffsPretty};
`;
}

(async () => {
  try {
    // 1) 拉取 MYR/oz 并换成 MYR/gram（纯金）
    const myrPerOz = await fetchGoldXauMyr();
    const myrPerGramPure = myrPerOz / OZT_TO_G;

    // 2) 读旧 data.js（为了在其基础上追加今天并裁剪历史）
    const dataPath = path.join(process.cwd(), 'js', 'data.js');
    const { obj: oldMarket } = readDataJs(dataPath);

    // 3) 生成新的市场价历史 goldPrices
    const marketObj = buildUpdatedMarket(oldMarket, myrPerGramPure);

    // 4) 生成 data.js 文本：goldPrices + storePrices + storeDiffs
    const text = toDataJsText(marketObj);

    // 5) 写回文件
    fs.mkdirSync(path.dirname(dataPath), { recursive: true });
    fs.writeFileSync(dataPath, text, 'utf8');

    console.log('Updated js/data.js successfully.');
  } catch (e) {
    console.error('Updater failed:', e.message);
    process.exit(1);
  }
})();
